.TH "BOOTOPTION" "8" "October 2018" "bootoption 0.3" "bootoption"
.SH "NAME"
bootoption \- EFI boot menu manipulation 
.SH "SYNOPSIS"
.B "bootoption"
.I "command"
[options]
.SH "DESCRIPTION"
bootoption is a program for the manipulation of boot\-related firmware variables.
.SH "COMMANDS"
Each
.I "command"
is listed with its description and individual arguments.
.TP 
.I "list"
.br
show the firmware boot menu
.TP 
.I "info"
.br
show an option's properties
.RS
.PP
usage: bootoption info Boot####
.RE
.TP 
.I "set"
.br
set/modify variables in NVRAM
.RS
.TP
.BR \-n " or " \-\-name " Boot####
.br
variable to manipulate
.TP
.BR \-d " or " \-\-description " LABEL
.br
display LABEL in firmware boot manager
.TP
.BR \-a " or " \-\-arguments " STRING
.br
an optional STRING passed to the loader command line
.TP
.BR \-u "
.br
pass command line arguments as UCS-2 (default is ASCII)
.TP
.BR \-\-active "
.br
set active attribute, 0 or 1
.TP
.BR \-\-hidden "
.br
set active attribute, 0 or 1
.TP
.BR \-x " or " \-\-bootnext " Boot####
.br
set BootNext to Boot####
.TP
.BR \-t " or " \-\-timeout " SECONDS
.br
set boot menu Timeout in SECONDS
.TP
.BR \-o " or " \-\-bootorder " Boot#### [Boot####] [Boot####] [...]
.br
explicitly set the boot order
.RE
.TP 
.I "create"
.br
create a new EFI load option
.RS
.TP
.BR \-l " or " \-\-loader " PATH
.br
the PATH to an EFI loader executable
.TP
.BR \-d " or " \-\-description " LABEL
.br
display LABEL in firmware boot manager
.TP
.BR \-a " or " \-\-arguments " STRING
.br
an optional STRING passed to the loader command line
.TP
.BR \-u "
.br
pass command line arguments as UCS-2 (default is ASCII)
.RE
.TP 
.I "order"
.br
re-arrange the boot order
.RS
.PP
usage: bootoption order <current position> to <new position>
.RE
.TP
.I "delete"
.br
delete variables from NVRAM
.RS
.TP
.BR \-n " or " \-\-name " Boot####
.br
delete named variable
.TP
.BR \-x " or " \-\-bootnext
.br
delete BootNext
.TP
.BR \-t " or " \-\-timeout
.br
delete Timeout
.TP
.BR \-o " or " \-\-bootorder
.br
delete the boot order
.RE
.TP 
.I "reboot"
.br
reboot to firmware settings
.SH "SEE ALSO"
nvram(8), efibootmgr(8)
.SH "BUGS"
github.com/vulgo/bootoption/issues
.SH "AUTHOR"
vulgo
